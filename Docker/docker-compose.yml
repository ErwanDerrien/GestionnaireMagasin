version: '3.8'

services:
  # Service Redis pour le cache partagÃ©
  redis:
    image: redis:7-alpine
    container_name: redis-store
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - monitoring_net
    restart: unless-stopped
    command: >
      redis-server
      --appendonly yes
      --appendfsync everysec
      --maxmemory 256mb
      --maxmemory-policy allkeys-lru

  store_manager_1:
    build:
      context: ../
      dockerfile: ./docker/Dockerfile
    command: python -m src.controller.app
    volumes:
      - ../:/app
    environment:
      - INSTANCE_NUM=1
      - PROMETHEUS_METRICS_PORT=8080
      - REDIS_HOST=redis-store
      - REDIS_PORT=6379
      - REDIS_DB=0
      - JWT_EXPIRATION_DELTA=45
    ports:
      - "8081:8080"
    networks:
      - monitoring_net
    container_name: store_manager_1
    depends_on:
      - redis
    restart: unless-stopped

  store_manager_2:
    build:
      context: ../
      dockerfile: ./docker/Dockerfile
    command: python -m src.controller.app
    volumes:
      - ../:/app
    environment:
      - INSTANCE_NUM=2
      - PROMETHEUS_METRICS_PORT=8080
      - REDIS_HOST=redis-store
      - REDIS_PORT=6379
      - REDIS_DB=0
      - JWT_EXPIRATION_DELTA=45
    ports:
      - "8082:8080"
    networks:
      - monitoring_net
    container_name: store_manager_2
    depends_on:
      - redis
    restart: unless-stopped

  store_manager_3:
    build:
      context: ../
      dockerfile: ./docker/Dockerfile
    command: python -m src.controller.app
    volumes:
      - ../:/app
    environment:
      - INSTANCE_NUM=3
      - PROMETHEUS_METRICS_PORT=8080
      - REDIS_HOST=redis-store
      - REDIS_PORT=6379
      - REDIS_DB=0
      - JWT_EXPIRATION_DELTA=45
    ports:
      - "8083:8080"
    networks:
      - monitoring_net
    container_name: store_manager_3
    depends_on:
      - redis
    restart: unless-stopped

  store_manager_4:
    build:
      context: ../
      dockerfile: ./docker/Dockerfile
    command: python -m src.controller.app
    volumes:
      - ../:/app
    environment:
      - INSTANCE_NUM=4
      - PROMETHEUS_METRICS_PORT=8080
      - REDIS_HOST=redis-store
      - REDIS_PORT=6379
      - REDIS_DB=0
      - JWT_EXPIRATION_DELTA=45
    ports:
      - "8084:8080"
    networks:
      - monitoring_net
    container_name: store_manager_4
    depends_on:
      - redis
    restart: unless-stopped

  store_manager_5:
    build:
      context: ../
      dockerfile: ./docker/Dockerfile
    command: python -m src.controller.app
    volumes:
      - ../:/app
    environment:
      - INSTANCE_NUM=5
      - PROMETHEUS_METRICS_PORT=8080
      - REDIS_HOST=redis-store
      - REDIS_PORT=6379
      - REDIS_DB=0
      - JWT_EXPIRATION_DELTA=45
    ports:
      - "8085:8080"
    networks:
      - monitoring_net
    container_name: store_manager_5
    depends_on:
      - redis
    restart: unless-stopped

  nginx:
    image: nginx:alpine
    ports:
      - '80:80'
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - store_manager_1
      - store_manager_2
      - store_manager_3
      - store_manager_4
      - store_manager_5
    networks:
      - monitoring_net
    container_name: nginx
    restart: unless-stopped

  prometheus:
    image: prom/prometheus:latest
    ports:
      - '9091:9090'
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--log.level=info'
      - '--web.enable-lifecycle'
    networks:
      - monitoring_net
    container_name: prometheus
    restart: unless-stopped
    depends_on:
      - store_manager_1
      - store_manager_2
      - store_manager_3
      - store_manager_4
      - store_manager_5

  # Service pour monitoring Redis (optionnel)
  redis-exporter:
    image: oliver006/redis_exporter:latest
    container_name: redis-exporter
    ports:
      - "9121:9121"
    environment:
      - REDIS_ADDR=redis://redis-store:6379
    networks:
      - monitoring_net
    depends_on:
      - redis
    restart: unless-stopped

networks:
  monitoring_net:
    driver: bridge

volumes:
  redis_data:
    driver: local
  prometheus_data:
    driver: local
