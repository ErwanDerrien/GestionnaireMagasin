@startuml UC2 - Consulter le stock et réapprovisionnement

skinparam {
  BackgroundColor #FFFFFF
  ActorBorderColor #333333
  ParticipantBackgroundColor #F5F5F5
  SequenceMessageAlign reverse
}

actor "Employé" as employe <<Person>>
participant "Interface Web" as interface
participant "Kong Gateway" as kong
participant "ProductController" as controller
participant "ProductService" as service
database "PostgreSQL" as db
database "Redis" as cache

== Consultation du Stock ==

employe -> interface : "Consulter stock"
activate interface
interface -> kong : GET /api/v2/products/stock/1
activate kong

kong -> kong : Vérifie API Key

alt API Key invalide
  kong -> interface : 401 Unauthorized
  deactivate kong
  interface --> employe : Erreur authentification
  deactivate interface
else API Key valide
  kong -> controller : GET /api/v2/products/stock/1
  activate controller
  controller -> cache : GET product:stock:store_1
  activate cache

  alt Données en cache
    cache -> controller : CacheHit
    deactivate cache
    controller -> kong : 200 OK (cached)
  else Données absentes
    cache -> controller : CacheMiss
    deactivate cache
    controller -> service : stock_status(store_id=1)
    activate service

    service -> db : SELECT products
    activate db
    db -> service : ResultSet
    deactivate db

    service -> cache : SET product:stock:store_1
    activate cache
    cache -> service : OK
    deactivate cache

    service -> controller : Données paginées
    deactivate service
    controller -> kong : 200 OK
  end

  kong -> interface : Response JSON
  deactivate kong
  interface -> employe : Affiche stock
  deactivate interface
end

== Réapprovisionnement ==

employe -> interface : "Demande réappro"
activate interface
interface -> kong : POST /api/v2/products/p/store/1/restock
activate kong

kong -> kong : Vérifie API Key

alt API Key invalide
  kong -> interface : 401 Unauthorized
  deactivate kong
  interface -> employe : Erreur authentification
  deactivate interface
else API Key valide
  kong -> controller : POST /api/v2/products/p/store/1/restock
  activate controller
  controller -> service : restock_store_products()
  activate service

  service -> db : BEGIN
  activate db
  service -> db : Vérifie stock
  db -> service : Quantité

  alt Stock suffisant
    service -> db : UPDATE stock
    db -> service : OK
    service -> db : COMMIT
    db -> service : Confirmé

    service -> cache : DEL cache keys
    activate cache
    cache -> service : OK
    deactivate cache

    service -> controller : Succès
    deactivate service
    controller -> kong : 202 Accepted
  else Stock insuffisant
    service -> db : ROLLBACK
    db -> service : Confirmé
    service -> controller : Erreur
    deactivate service
    controller -> kong : 409 Conflict
  end

  deactivate db
  deactivate controller
  kong -> interface : Résultat
  deactivate kong
  interface -> employe : Notification
  deactivate interface