@startuml UC2 - Consulter le stock et réapprovisionnement

skinparam {
  BackgroundColor #FFFFFF
  ActorBorderColor #333333
  ParticipantBackgroundColor #F5F5F5
  SequenceMessageAlign reverse
}

actor "Employé" as employe <<Person>>
participant "Interface Web" as interface
participant "Kong Gateway" as kong
participant "StockController" as controller
participant "StockService" as service
database "MySQL" as db
database "Redis" as cache

== Consultation du Stock ==

employe -> interface : "Consulter stock"
activate interface
interface -> kong : GET /api/v1/stock
activate kong

kong -> controller : get_all_products() [JWT]
activate controller
controller -> cache : Check redis_key:stock_status
activate cache

alt Données en cache
  cache --> controller : CacheHit (JSON)
  deactivate cache
  controller --> kong : 200 (cached)
else Données absentes
  cache --> controller : CacheMiss
  deactivate cache
  controller -> service : get_stock_status()
  activate service
  service -> db : EXEC get_stock_procedure()
  activate db
  db --> service : ResultSet
  deactivate db
  service -> cache : SET redis_key:stock_status (TTL=5min)
  activate cache
  cache --> service : OK
  deactivate cache
  service --> controller : StockDTO[]
  deactivate service
  controller --> kong : 200 OK
end

kong --> interface : Response (JSON)
deactivate kong
interface --> employe : Affiche tableau des stocks
deactivate interface

== Réapprovisionnement ==

employe -> interface : "Demande réappro [SKU123, Qty=10]"
activate interface
interface -> kong : POST /api/v1/stock/replenish
activate kong

kong -> controller : process_replenishment()
activate controller
controller -> service : verify_and_transfer_stock(SKU123, 10)
activate service

service -> db : START TRANSACTION
service -> db : CALL check_stock_availability('SKU123', 10)
activate db

alt Stock disponible
  db --> service : SUCCESS
  service -> db : EXEC transfer_stock('SKU123', 10)
  db --> service : CONFIRMED
  service -> cache : DEL redis_key:stock_status
  activate cache
  cache --> service : 1
  deactivate cache
  service --> controller : ReplenishmentConfirmation
  deactivate service
  controller --> kong : 202 Accepted
else Stock insuffisant
  db --> service : ERROR
  service -> db : ROLLBACK
  db --> service : DONE
  service --> controller : ReplenishmentError
  deactivate service
  controller --> kong : 409 Conflict
end

deactivate db
deactivate controller
kong --> interface : Response
deactivate kong
interface --> employe : Notification résultat
deactivate interface

@enduml